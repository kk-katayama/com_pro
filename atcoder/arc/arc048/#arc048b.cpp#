#include <iostream>
#include <algorithm>
#include <vector>
#include <map>
#include <utility>
#define rep(i,n) for(int i=0;i<n;++i)
#define rep1(i,n) for(int i=1;i<=n;++i)
using namespace std;
int main()
{
  int n;cin >> n;
  vector<int> r(n),h(n);
  rep(i,n) cin >> r[i] >> h[i];
  vector<pair<pair<int,int>,int>> p(n);
  rep(i,n) p[i] = { {r[i], h[i] - 1}, i};
  sort(p.begin(), p.end());
  map<pair<int,int>,int> mp;
  map<int,int> com;
  vector<int> a;
  int ind = 0,cnt = 1;
  rep(i,n-1){
    if(p[i].first.first != p[i+1].first.first){
      com[p[i].first.first] = ind++;
      a.push_back(cnt);
      cnt = 1;
    }
    else cnt++;
  }
  com[p[n-1].first.first] = ind++;
  a.push_back(cnt);

  rep(i,n) mp[p[i].first]++;

  vector<int> sum(a.size()+1);
  sum[0] = 0;
  rep(i,a.size()) sum[i+1] = sum[i] + a[i];
  
  vector<int> win(n,0),lose(n,0),draw(n,0);
  rep(i,n){
    int j = p[i].second;
    int in = com[p[i].first.first];
    win[j] += sum[in];
    lose[j] += sum[sum.size()-1] - sum[in+1];
    draw[j] += mp[p[i].first] - 1;
    win[j] += mp[ { p[i].first.first, (p[i].first.second + 1) % 3 } ];
    lose[j] += mp[ { p[i].first.first, (p[i].first.second + 2) % 3 } ];    
  }

  rep(i,n) cout << win[i] << " " << lose[i] << " " << draw[i] << "\n";
  
  return 0;
}
