#include <iostream>
#include <algorithm>
#include <vector>
#define rep(i,n) for(int i=0;i<n;++i)
#define rep1(i,n) for(int i=1;i<=n;++i)
using namespace std;
typedef long long ll;
int main()
{
  int n;cin >> n;
  vector<ll> a(n);
  rep(i,n) cin >> a[i];

  if(n % 2 == 0) {
    vector<ll> sume(n/2+1);
    sume[0] = 0;
    for(int i = 0;i < n/2;++i) {
      sume[i+1] = sume[i] + a[2*i];
    }
    vector<ll> sumo(n/2+1);
    sumo[0] = 0;
    for(int i = 0;i < n/2;++i) {
      sumo[i+1] = sumo[i] + a[2*i+1];
    }
    ll res = -1e+15;

    rep(i,n/2+1) {
      res = max(res, sume[i] + sumo[n/2] - sumo[i]);
    }
    cout << res << "\n";
  }
  else {
    vector<ll> sume(n/2+1);
    sume[0] = 0;
    for(int i = 0;i < n/2;++i) {
      sume[i+1] = sume[i] + a[2*i];
    }
    vector<ll> sumo(n/2+1);
    sumo[0] = 0;
    for(int i = 0;i < n/2;++i) {
      sumo[i+1] = sumo[i] + a[2*i+1];
    }
    ll res = -1e+15;

    rep(i,n/2+1) {
      res = max(res, sume[i] + sumo[n/2] - sumo[i]);
    }

    sume[0] = 0;
    for(int i = 0;i < n/2;++i) {
      sume[i+1] = sume[i] + a[2*i+1];
    }
    sumo[0] = 0;
    for(int i = 0;i < n/2;++i) {
      sumo[i+1] = sumo[i] + a[2*i+2];
    }

    rep(i,n/2+1) {
      res = max(res, sume[i] + sumo[n/2] - sumo[i]);
    }

    sume[0] = 0;
    for(int i = 0;i < n/2;++i) {
      sume[i+1] = sume[i] + a[2*i+2];
    }
    sumo[0] = 0;
    for(int i = 0;i < n/2;++i) {
      sumo[i+1] = sumo[i] + a[2*i+3];
    }

    rep(i,n/2+1) {
      res = max(res, sume[i] + sumo[n/2] - sumo[i]);
    }        

    cout << res << "\n";
  }
  return 0;
}
